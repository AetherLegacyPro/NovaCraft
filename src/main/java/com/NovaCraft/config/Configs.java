package com.NovaCraft.config;

import com.NovaCraft.NovaCraft;
import java.io.File;
import net.minecraftforge.common.config.Configuration;
import net.minecraftforge.common.config.Property;

public class Configs {
    public static float gammaAlterations;
    public static boolean enableGammaAlterations;
    public static boolean enableDebugMode;
    public static boolean enableGlowingObsidian;
    public static boolean enableNoSkippingTheNight;
    public static boolean disableEnchantedGoldenAppleRecipe;
    public static boolean enableWeaponsToAllignWithVanilla;
    public static boolean disableRegularVanillaGen;
    public static boolean disableRegularVanillaOres;
    public static boolean disableCustom;
    public static boolean disableDirt;
    public static boolean disableGravel;
    public static boolean disableCoal;
    public static boolean disableDiamond;
    public static boolean disableGold;
    public static boolean disableIron;
    public static boolean disableLapis;
    public static boolean disableRedstone;
    public static boolean disableNetherQuartz;
    public static boolean disableEmerald;
    public static boolean disableMonsterEgg;
    public static int[] DeeperCavesBlacklist;
    public static boolean DeeperCavesBlacklistAsWhitelist;
    public static int[] WorldGenDimensionBlacklist;
    public static boolean WorldGenDimensionBlacklistAsWhitelist;
    public static boolean enableVanillaBiomeAlterations;
    public static boolean enableVanillaHillBiomeAlterations;
    public static boolean enableVanillaMountainBiomeAlterations;
    public static boolean enablePlainsBiomeAlterations;
    public static boolean enableDesertBiomeAlterations;
    public static boolean enableBeachBiomeAlterations;
    public static boolean enableWaterBiomeAlterations;
    public static boolean enableMiscBiomeAlterations;
    public static boolean enableGrimstone;
    public static boolean enableGrimstoneDiamond;
    public static boolean enableGrimstoneIron;
    public static boolean enableGrimstoneGold;
    public static boolean enableGrimstoneLapis;
    public static boolean enableGrimstoneRedstone;
    public static boolean enableGrimstoneEmerald;
    public static boolean enableNullstone;
    public static boolean enableNullstoneDiamond;
    public static boolean enableNullstoneIron;
    public static boolean enableNullstoneGold;
    public static boolean enableNullstoneLapis;
    public static boolean enableNullstoneRedstone;
    public static boolean enableNullstoneEmerald;
    public static boolean enableEtherstone;
    public static boolean enableEtherstoneGold;
    public static boolean enableEtherstoneIron;
    public static boolean enableEtherstoneEmerald;
    public static boolean enableEtherstoneCoal;
    public static boolean enableMountainOres;
    public static boolean enableExtraEmeraldOreGeneration;
    public static boolean enableAdditonalDiamondOreGeneration;
    public static boolean enableAdditonalCoalOreGeneration;
    public static boolean enableAdditonalIronOreGeneration;
    public static boolean enableAdditonalGoldOreGeneration;
    public static boolean enableAdditonalRedstoneOreGeneration;
    public static boolean enableAdditonalLapisOreGeneration;
    public static boolean enableBrimstoneOre;
    public static boolean enableSculkGeneration;
    public static boolean enableSculkGenerationAllBiomes;
    public static boolean enableStalagAndStalacGeneration;
    public static boolean enableMossGeneration;
    public static boolean enableRareCrystalGeneration;
    public static boolean enablePherithiumGeneration;
    public static boolean enablePherithiumOreGeneration;
    public static boolean enableLichenGeneration;
    public static boolean enableGlowLichenGeneration;
    public static boolean enableNovaMushrooomGeneration;
    public static boolean enableYttrlinisteOverworldGeneration;
    public static boolean enableEndstoneBlobs;
    public static boolean enableFrontierslate;
    public static boolean enableVacuumSand;
    public static boolean enableBasal;
    public static boolean enableRareOverworldKlangiteOre;
    public static boolean enableRareOverworldTophiniteOre;
    public static boolean enableMassiveCraters;
    public static boolean enableCraters;
    public static boolean enableGlowSquidParticles;
    public static boolean enableEnderLordParticles;
    public static boolean enableWardenParticles;
    public static boolean enableVoidEntityParticles;
    public static boolean enableFireflyParticles;
    public static boolean enableIonizatiorParticles;
    public static boolean enableCalciteGeneration;
    public static boolean enableNovaCraftTuffGeneration;
    public static boolean enableDeepslateOreGeneration;
    public static boolean enableRawOreBlocksStructures;
    public static boolean enableCalciteBrickRecipe;
    public static boolean enableTuffBrickRecipe;
    public static boolean enablePrismarineInStructures;
    public static boolean enableBlockOfRawNetheriteRecipe;
    public static boolean enableAlternateAmpJumpPotionRecipe;
    public static boolean enableEtFuturumIronNugget;
    public static boolean enableNetheriteInRecipes;
    public static boolean enableCrystalGolemAura;
    public static boolean enableLuminantLeavesGlow;
    public static boolean enableAncientCityTotem;
    public static boolean enableSculkStoneSpreading;
    public static boolean enableSpawnGlowSquid;
    public static boolean enableSpawnPhantom;
    public static boolean enableSpawnOverworldPhantom;
    public static boolean enableSpawnSlaughter;
    public static boolean enableSpawnDrifter;
    public static boolean enableSpawnSculkDweller;
    public static boolean enableSpawnBlazingCharger;
    public static boolean enableSpawnEnderLord;
    public static boolean enableSpawnEnderAvis;
    public static boolean enableSpawnEnderRay;
    public static boolean enableSpawnIceologer;
    public static boolean enableSpawnVindicator;
    public static boolean enableSpawnVoidEntity;
    public static boolean enableSpawnVoidCube;
    public static boolean enableSpawnNullifier;
    public static boolean enableSpawnGoat;
    public static boolean enableSpawnSculkAbomination;
    public static boolean enableSpawnBlazingSerpent;
    public static boolean enableSpawnPhoenix;
    public static boolean enableSpawnFirefly;
    public static boolean enableSpawnDeepoid;
    public static boolean enableSpawnCaveMonitor;
    public static boolean enableSpawnDeathStalker;
    public static boolean enableSpawnRealityDistorter;
    public static boolean enableSpawnDestituteTentacle;
    public static boolean enableSpawnNitro;
    public static boolean enableSpawnCreepyCube;
    public static boolean enableSpawnCreaking;
    public static boolean enableSpawnCreakinginModdedBiomes;
    public static boolean enableSpawnFrog;
    public static boolean enableSpawnFroginModdedBiomes;
    public static boolean enableSpawnGiantFrog;
    public static boolean enableIncreasedVanillaNetherMobSpawn;
    public static boolean enableIncreasedVanillaOverworldMobSpawn;
    public static boolean enableSpawnHardmodeSlime;
    public static boolean enableSpawnHardmodeSpider;
    public static boolean enableSpawnHardmodeSkeleton;
    public static boolean enableSpawnHardmodeZombie;
    public static boolean enableSpawnHardmodeCreeper;
    public static boolean enableSpawnHardmodeMagmaCube;
    public static boolean enableSpawnHardmodeGhast;
    public static boolean enableSpawnFireflyOtherBiomes;
    public static boolean enableNoDespawnFirefly;
    public static boolean enableAetherLegacyDepartureItems;
    public static boolean enableRawDivineral;
    public static boolean enableNovaCraftGloves;
    public static boolean enableHardmode;
    public static boolean enableTreasureCratesDropDiamonds;
    public static boolean enableUniqueLegendaryBeaconBeam;
    public static boolean enableWardenBlindness;
    public static boolean enableWardenSlowness;
    public static boolean enableWardenWeakness;
    public static boolean enableLuminantTreeGeneration;
    public static boolean enableLargeLuminantTreeGeneration;
    public static boolean enableLacunaTreeGeneration;
    public static int vindicatorVillageSpawnRate;
    public static boolean enableVindicatorForestHouseGeneration;
    public static boolean enableOceanDungeonsGeneration;
    public static boolean enableDesertCreeperStatueGeneration;
    public static boolean enableSlimeStatueGeneration;
    public static int endIslandSpawnRate;
    public static int destituteIslandSpawnRate;
    public static boolean enableDeepoidFortress;
    public static boolean enableSculkInfestedMineshaft;
    public static boolean enableBlackstoneBricksInNetherStructures;
    public static boolean enableInfestedBastion;
    public static boolean enableAncientCity;
    public static boolean enableDarkOakFenceInAncientCity;
    public static boolean enableDeepslateInAncientCity;
    public static boolean enableDeepslateBricksInAncientCity;
    public static boolean enableEtFuturumSoulLanternInAncientCity;
    public static boolean enableCobbledDeepslateInAncientCity;
    public static boolean enableEtFuturumSoulFireInAncientCity;
    public static boolean enableBlueIceInAncientCity;
    public static boolean enableIronTrapdoorInAncientCity;
    public static boolean disableNetherliciousBasaltInAncientCity;
    public static boolean disableNetherliciousSmoothBasaltInAncientCity;
    public static boolean disableMagmaBlock;
    public static boolean disableChain;
    public static final String catVanillaChanges = "Important Options";
    public static final String catAncientCity = "Ancient City Customization";
    public static final String catGeneration = "New generation";
    public static final String catParticles = "New particles";
    public static final String catEtFuturum = "Et Futurum Requiem Options";
    public static final String catMobs = "Mobs";
    public static final String catFirefly = "Firefly";
    public static final String catAetherLegacy = "Aether Legacy Options";
    public static final String catMisc = "Misc";

    public static void loadConfigs(File configFile) {
        NovaCraft.logger.info("Loading configuration...");
        Configuration conf = new Configuration(configFile);
        conf.load();
        String category = "vanilla";
        Property prop = conf.get(category, "disableRegularVanillaGen", true);
        prop.comment = "Disables all \"regular\" vanilla generation. NOTE: This includes Dirt and Gravel pockets inside stone, but not Emeralds in Extreme Hills biomes.";
        disableRegularVanillaGen = prop.getBoolean();
        prop = conf.get(category, "disableRegularVanillaOres", true);
        prop.comment = "Disables \"regular\" vanilla _ore_ generation, not including Nether Quartz. This does not include Emeralds in Extreme Hills biomes, which are not part of the regular ore generation.";
        disableRegularVanillaOres = prop.getBoolean();
        prop = conf.get(category, "disableCustom", false);
        prop.comment = "Disables custom ore generation. NOTE: Very few mods actually use the OreGenEvent.GenerateMinable event though, and this only works with those that do.";
        disableCustom = prop.getBoolean();
        prop = conf.get(category, "disableDirt", false);
        prop.comment = "Disables Dirt pocket generation inside stone.";
        disableDirt = prop.getBoolean() || disableRegularVanillaGen;
        prop = conf.get(category, "disableGravel", false);
        prop.comment = "Disables Gravel pocket generation inside stone.";
        disableGravel = prop.getBoolean() || disableRegularVanillaGen;
        prop = conf.get(category, "disableCoal", false);
        prop.comment = "Disables Coal Ore generation.";
        disableCoal = prop.getBoolean() || disableRegularVanillaOres;
        prop = conf.get(category, "disableDiamond", false);
        prop.comment = "Disables Diamond Ore generation.";
        disableDiamond = prop.getBoolean() || disableRegularVanillaOres;
        prop = conf.get(category, "disableGold", false);
        prop.comment = "Disables Gold Ore generation.";
        disableGold = prop.getBoolean() || disableRegularVanillaOres;
        prop = conf.get(category, "disableIron", false);
        prop.comment = "Disables Iron Ore generation.";
        disableIron = prop.getBoolean() || disableRegularVanillaOres;
        prop = conf.get(category, "disableLapis", false);
        prop.comment = "Disables Lapis Ore generation.";
        disableLapis = prop.getBoolean() || disableRegularVanillaOres;
        prop = conf.get(category, "disableNetherQuartz", false);
        prop.comment = "Disables Nether Quartz Ore generation.";
        disableNetherQuartz = prop.getBoolean();
        prop = conf.get(category, "disableRedstone", false);
        prop.comment = "Disables Redstone Ore generation.";
        disableRedstone = prop.getBoolean() || disableRegularVanillaOres;
        prop = conf.get(category, "disableEmerald", false);
        prop.comment = "Disables Emerald Ore generation in Extreme Hills biomes. NOTE: This will be done after chunk population by replacing all Emerald ore with Stone.";
        disableEmerald = prop.getBoolean();
        prop = conf.get(category, "disableMonsterEgg", true);
        prop.comment = "Disables Monster Egg (= Silverfish block) generation in Extreme Hills biomes. NOTE: This will be done after chunk population by replacing all Monster Eggs with Stone.";
        disableMonsterEgg = prop.getBoolean();
        enableGrimstoneRedstone = conf.getBoolean("enableGrimstoneRedstone", "New generation", true, "Enables Grimstone Redstone Ore generation");
        enableGrimstoneLapis = conf.getBoolean("enableGrimstoneLapis", "New generation", true, "Enables Grimstone Lapis Ore generation");
        enableGrimstoneIron = conf.getBoolean("enableGrimstoneIron", "New generation", true, "Enables Grimstone Iron Ore generation");
        enableGrimstoneGold = conf.getBoolean("enableGrimstoneGold", "New generation", true, "Enables Grimstone Gold Ore generation");
        enableGrimstoneDiamond = conf.getBoolean("enableGrimstoneDiamond", "New generation", true, "Enables Grimstone Diamond Ore generation");
        enableGrimstoneEmerald = conf.getBoolean("enableGrimstoneEmerald", "New generation", true, "Enables Grimstone Emerald Ore generation");
        enableNullstoneRedstone = conf.getBoolean("enableNullstoneRedstone", "New generation", true, "Enables Nullstone Redstone Ore generation");
        enableNullstoneLapis = conf.getBoolean("enableNullstoneLapis", "New generation", true, "Enables Nullstone Lapis Ore generation");
        enableNullstoneIron = conf.getBoolean("enableNullstoneIron", "New generation", true, "Enables Nullstone Iron Ore generation");
        enableNullstoneGold = conf.getBoolean("enableNullstoneGold", "New generation", true, "Enables Nullstone Gold Ore generation");
        enableNullstoneDiamond = conf.getBoolean("enableNullstoneDiamond", "New generation", true, "Enables Nullstone Diamond Ore generation");
        enableNullstoneEmerald = conf.getBoolean("enableNullstoneEmerald", "New generation", true, "Enables Nullstone Emerald Ore generation");
        enableEtherstoneIron = conf.getBoolean("enableEtherstoneIron", "New generation", true, "Enables Etherstone Iron Ore generation");
        enableEtherstoneGold = conf.getBoolean("enableEtherstoneGold", "New generation", true, "Enables Etherstone Gold Ore generation");
        enableEtherstoneEmerald = conf.getBoolean("enableEtherstoneEmerald", "New generation", true, "Enables Etherstone Emerald Ore generation");
        enableEtherstoneCoal = conf.getBoolean("enableEtherstoneCoal", "New generation", true, "Enables Etherstone Coal Ore generation");
        enableBrimstoneOre = conf.getBoolean("enableBrimstoneOre", "New generation", true, "Enables Brimstone Ore generation");
        enableAdditonalDiamondOreGeneration = conf.getBoolean("enableAdditonalDiamondOreGeneration", "New generation", false, "Enables More Diamond Ore to generate within Caves.(Enable if you wants diamonds rarer than vanilla but not as rare as in NovaCraft.)");
        enableAdditonalLapisOreGeneration = conf.getBoolean("enableAdditonalLapisOreGeneration", "New generation", false, "Enables More Lapis Ore to generate within Caves.(Not sure why you want more lapis but it here if you want more in world gen.)");
        enableAdditonalIronOreGeneration = conf.getBoolean("enableAdditonalIronOreGeneration", "New generation", true, "Enables More Iron Ore to generate within Caves.");
        enableAdditonalGoldOreGeneration = conf.getBoolean("enableAdditonalGoldOreGeneration", "New generation", false, "Enables More Gold Ore to generate within Caves.");
        enableAdditonalRedstoneOreGeneration = conf.getBoolean("enableAdditonalRedstoneOreGeneration", "New generation", false, "Enables More Redstone Ore to generate within Caves.");
        enableAdditonalCoalOreGeneration = conf.getBoolean("enableAdditonalCoalOreGeneration", "New generation", true, "Enables More Coal Ore to generate within Caves.");
        Property WorldGenlistProp = conf.get("New generation", "WorldGenDimensionBlacklist", new int[]{0});
        WorldGenlistProp.comment = "The dimensions NovaCraft Flora and Geos should not spawn in.";
        WorldGenDimensionBlacklist = WorldGenlistProp.getIntList();
        WorldGenDimensionBlacklistAsWhitelist = conf.getBoolean("WorldGenDimensionBlacklistAsWhitelist", "New generation", true, "Treat the NovaCraft Flora and Geos dimension blacklist as a whitelist instead, so NovaCraft Flora and Geos will ONLY generate in those dimensions, instead of excluding those dimensions from generation.");
        enableGrimstone = conf.getBoolean("enableGrimstone", "New generation", true, "Enables Grimstone generation");
        enableEndstoneBlobs = conf.getBoolean("enableEndstoneBlobs", "New generation", true, "Enables Endstone Blobs to generate throughout the End, if you use HEE or Enderlious this should not be necessary.");
        enableFrontierslate = conf.getBoolean("enableFrontierslate", "New generation", true, "Enables Frontierslate to generate throughout the End.");
        enableVacuumSand = conf.getBoolean("enableVacuumSand", "New generation", true, "Enables Vacuum Sand to generate throughout the End.");
        Property DeeperCavesWorldGenlistProp = conf.get("New generation", "DeeperCavesBlacklist", new int[0]);
        DeeperCavesWorldGenlistProp.comment = "Meant for those who play with the Deeper Caves Mod, Grimstone and Nullstone can Generate from y=8 to y=256.";
        DeeperCavesBlacklist = DeeperCavesWorldGenlistProp.getIntList();
        DeeperCavesBlacklistAsWhitelist = conf.getBoolean("DeeperCavesBlacklistAsWhitelist", "New generation", true, "Treat the Grimstone and Nullstone Generation dimension blacklist as a whitelist instead, so Grimstone and Nullstone can Generate from y=8 to y=256 and will ONLY generate in those dimensions, instead of excluding those dimensions from generation.");
        enableVanillaBiomeAlterations = conf.getBoolean("enableVanillaBiomeAlterations", "New generation", true, "Enables height changes and randomness to Vanilla Biomes");
        enableVanillaHillBiomeAlterations = conf.getBoolean("enableVanillaHillBiomeAlterations", "New generation", true, "Enables hill subtype biome changes: ForestHills, TagiaHills etc");
        enableVanillaMountainBiomeAlterations = conf.getBoolean("enableVanillaMountainBiomeAlterations", "New generation", true, "Enables extreme hill biome changes: ExtremeHills, ExtremeHillsPlus etc");
        enablePlainsBiomeAlterations = conf.getBoolean("enablePlainsBiomeAlterations", "New generation", true, "Enables plains and ice plains to be flatter in generation.");
        enableDesertBiomeAlterations = conf.getBoolean("enableDesertBiomeAlterations", "New generation", true, "Enables deserts to be flatter in generation.");
        enableBeachBiomeAlterations = conf.getBoolean("enableBeachBiomeAlterations", "New generation", true, "Enables beach biomes to be more pronounce and taller along coastlines.");
        enableWaterBiomeAlterations = conf.getBoolean("enableWaterBiomeAlterations", "New generation", true, "Enables rivers, swamps, and oceans to be a bit deeper in world generation.");
        enableMiscBiomeAlterations = conf.getBoolean("enableMiscBiomeAlterations", "New generation", true, "Enables regular biomes to have a slightly higher average height and randomness.");
        enableNullstone = conf.getBoolean("enableNullstone", "New generation", true, "Enables Nullstone generation");
        enableEtherstone = conf.getBoolean("enableEtherstone", "New generation", true, "Enables Etherstone generation");
        enableBasal = conf.getBoolean("enableBasal", "New generation", true, "Enables Basal generation");
        enableMountainOres = conf.getBoolean("enableMountainOres", "New generation", true, "Enables Coal, Iron, Gold, and Emerald generating above y = 90.");
        enableRareOverworldKlangiteOre = conf.getBoolean("enableRareOverworldKlangiteOre", "New generation", false, "Enables Klangite Ore to also generate in the Overworld.");
        enableRareOverworldTophiniteOre = conf.getBoolean("enableRareOverworldTophiniteOre", "New generation", false, "Enables Tophinite Ore to also generate in the Overworld.");
        enableExtraEmeraldOreGeneration = conf.getBoolean("enableExtraEmeraldOreGeneration", "New generation", true, "Enables Emerald Ore to rarely generate in all biomes from y = 0 to y = 90");
        enableSculkGeneration = conf.getBoolean("enableSculkGeneration", "New generation", true, "Enables Sculk and it's variations to generate outside sculk geos/dungeons.");
        enableSculkGenerationAllBiomes = conf.getBoolean("enableSculkGenerationAllBiomes", "New generation", true, "Enables Sculk and it's variations to generate outside sculk geos/dungeons in all overworld biomes.");
        enableStalagAndStalacGeneration = conf.getBoolean("enableStalagAndStalacGeneration", "New generation", true, "Enables Stalagmites and Stalactites in world generation.");
        enableRareCrystalGeneration = conf.getBoolean("enableRareCrystalGeneration", "New generation", false, "Enables the various crystals to very rarely generate in caves outside their geos -> for modpacks with insane cave generation due to lack of spawning spaces.");
        enableMossGeneration = conf.getBoolean("enableMossGeneration", "New generation", true, "Enables moss blocks and carpets to generate on the surface and in caves close to the surface.");
        enablePherithiumGeneration = conf.getBoolean("enablePherithiumGeneration", "New generation", true, "Enables pherithium stalagmites and stalagtites generation.");
        enablePherithiumOreGeneration = conf.getBoolean("enablePherithiumOreGeneration", "New generation", false, "Enables pherithium ore to generate, by default it is set to false.");
        enableLichenGeneration = conf.getBoolean("enableLichenGeneration", "New generation", true, "Enables Dark and Grim lichen generation.");
        enableGlowLichenGeneration = conf.getBoolean("enableGlowLichenGeneration", "New generation", true, "Enables Glow lichen generation.");
        enableNovaMushrooomGeneration = conf.getBoolean("enableNovaMushrooomGeneration", "New generation", true, "Enables all the new types of mushrooms to generate.");
        enableYttrlinisteOverworldGeneration = conf.getBoolean("enableYttrlinisteOverworldGeneration", "New generation", false, "Enables Yttrlinsite Geos to generate in the Overworld instead of only in the Nether.");
        enableLacunaTreeGeneration = conf.getBoolean("enableLacunaTreeGeneration", "New generation", true, "Enables Lacuna Trees Generating In the End(May crash when generating with Neodymium; fix unknown).");
        enableLuminantTreeGeneration = conf.getBoolean("enableLuminantTreeGeneration", "New generation", true, "Enables luminant tree generation.");
        enableLargeLuminantTreeGeneration = conf.getBoolean("enableLargeLuminantTreeGeneration", "New generation", true, "Enables large luminant tree generation.");
        enableDesertCreeperStatueGeneration = conf.getBoolean("enableDesertCreeperStatueGeneration", "New generation", true, "Enables Sandstone Creeper Statue generation.");
        enableSlimeStatueGeneration = conf.getBoolean("enableSlimeStatueGeneration", "New generation", true, "Enables Stone Slime Statue generation.");
        vindicatorVillageSpawnRate = conf.get("Spawn Rate - Vindicator Villages", "New generation", 25).getInt();
        enableVindicatorForestHouseGeneration = conf.getBoolean("enableVindicatorForestHouseGeneration", "New generation", true, "Enables random small Vindicator houses in Forests.");
        enableOceanDungeonsGeneration = conf.getBoolean("enableOceanDungeonsGeneration", "New generation", true, "Enables small dungeons with sea serpent spawners to generate at the bottom of oceans.");
        enableDeepoidFortress = conf.getBoolean("enableDeepoidFortress", "New generation", true, "Enables Deepoid Fortress Generation in the Nether.");
        enableSculkInfestedMineshaft = conf.getBoolean("enableSculkInfestedMineshaft", "New generation", true, "Enables Sculk Infested Mineshafts generation.");
        endIslandSpawnRate = conf.get("Spawn Rate - End Islands", "New generation", 121).getInt();
        destituteIslandSpawnRate = conf.get("Spawn Rate - Destitute Islands", "New generation", 300).getInt();
        enableBlackstoneBricksInNetherStructures = conf.getBoolean("enableBlackstoneBricksInNetherStructures", "New generation", true, "Use Blackstone Bricks from Netherlicious instead use Nullstone Bricks.");
        enableInfestedBastion = conf.getBoolean("enableInfestedBastion", "New generation", true, "Enables infested bastion to generate in the Nether.");
        enableCraters = conf.getBoolean("enableCraters", "New generation", true, "Enables small craters in world generation.");
        enableMassiveCraters = conf.getBoolean("enableMassiveCraters", "New generation", true, "Enables massive craters in world generation.");
        enableCalciteGeneration = conf.getBoolean("enableCalciteGeneration", "Et Futurum Requiem Options", true, "Enables Calcite from Et Futurum to generate from y=70 to y=100.");
        enableNovaCraftTuffGeneration = conf.getBoolean("enableNovaCraftTuffGeneration", "Et Futurum Requiem Options", false, "Enables Tuff Generation from Et Futurum to generate from y=25 to y=45, instead of at lower y levels.(Disable the Tuff generation in Et Futurum before setting this to true.)");
        enableDeepslateOreGeneration = conf.getBoolean("enableDeepslateOreGeneration", "Et Futurum Requiem Options", false, "Enables Vanite to generate within deepslate from Et Futurum Requiem instead within stone and has a deepslate texture to compensate for it.");
        enableRawOreBlocksStructures = conf.getBoolean("enableRawOreBlocksStructures", "Et Futurum Requiem Options", true, "Enables Raw Copper, Iron, and Gold Blocks from Et Futurum Requiem to generate instead of Iron and Gold Ore Blocks in Sculk Infested Mineshafts.");
        enableCalciteBrickRecipe = conf.getBoolean("enableCalciteBrickRecipe", "Et Futurum Requiem Options", true, "Enables the recipe for Calcite Bricks: DISABLE if calcite is disabled in Et Futurum Requiem.");
        enableTuffBrickRecipe = conf.getBoolean("enableTuffBrickRecipe", "Et Futurum Requiem Options", true, "Enables the recipe for Tuff Bricks: DISABLE if calcite is disabled in Et Futurum Requiem.");
        enablePrismarineInStructures = conf.getBoolean("enablePrismarineInStructures", "Et Futurum Requiem Options", true, "Enables the use of Prismarine in structures: DISABLE if prismarine is disabled in Et Futurum Requiem.");
        enableBlockOfRawNetheriteRecipe = conf.getBoolean("enableBlockOfRawNetheriteRecipe", "Et Futurum Requiem Options", true, "Enables the crafting recipe of Blocks of Raw Netherite.(DISABLE if you disabled Netherite in Et Futurum Requiem)");
        enableAlternateAmpJumpPotionRecipe = conf.getBoolean("enableAlternateAmpJumpPotionRecipe", "Et Futurum Requiem Options", true, "Changes Recipe of the extended jump potion to require rabbit foot from Et Futurum.(DISABLE if you disabled rabbits/rabbit foot in Et Futurum Requiem)");
        enableNetheriteInRecipes = conf.getBoolean("enableNetheriteInRecipes", "Et Futurum Requiem Options", true, "Changes Various Recipes to require netherite in their recipes from Et Futurum.(DISABLE if you disabled netherite in Et Futurum Requiem)");
        enableEtFuturumIronNugget = conf.getBoolean("enableEtFuturumIronNugget", "Et Futurum Requiem Options", true, "Allows recipes and blocks from NovaCraft to use and drop iron nuggets.(DISABLE if you disabled netherite in Et Futurum Requiem)");
        enableAncientCity = conf.getBoolean("enableAncientCity", "Ancient City Customization", true, "Enables Ancient Cities to start generating 5k from spawn.");
        enableDarkOakFenceInAncientCity = conf.getBoolean("enableDarkOakFenceInAncientCity", "Ancient City Customization", true, "Do not use Dark Oak Fence from Et Futurum Requiem instead use regular Fences in The Ancient City.");
        enableCobbledDeepslateInAncientCity = conf.getBoolean("enableCobbledDeepslateInAncientCity", "Ancient City Customization", true, "Do not use Cobbled Deepslate from Et Futurum Requiem instead use Cobbled Grimstone in The Ancient City.");
        enableDeepslateInAncientCity = conf.getBoolean("enableDeepslateInAncientCity", "Ancient City Customization", true, "Do not use Deepslate from Et Futurum Requiem instead use Grimstone Blocks in The Ancient City.");
        enableDeepslateBricksInAncientCity = conf.getBoolean("enableDeepslateBricksInAncientCity", "Ancient City Customization", true, "Do not use Deepslate Bricks and building blocks from Et Futurum Requiem instead use Grimstone Bricks in The Ancient City.");
        enableEtFuturumSoulLanternInAncientCity = conf.getBoolean("enableEtFuturumSoulLanternInAncientCity", "Ancient City Customization", true, "Do not use Et Futurum Requiem soul lanterns and instead use the ones from Netherlicious, if those do not exist then there will be nothing.");
        enableEtFuturumSoulFireInAncientCity = conf.getBoolean("enableEtFuturumSoulFireInAncientCity", "Ancient City Customization", true, "Do not use Et Futurum Requiem soul fire and instead use the ones from Netherlicious, if those do not exist then use Deepfire.");
        enableBlueIceInAncientCity = conf.getBoolean("enableBlueIceInAncientCity", "Ancient City Customization", true, "Do not use Blue Ice from Et Futurum Requiem instead use Packed Ice in The Ancient City.");
        enableIronTrapdoorInAncientCity = conf.getBoolean("enableIronTrapdoorInAncientCity", "Ancient City Customization", true, "Do not use Iron Trapdoor from Et Futurum Requiem instead use regular trapdoor in The Ancient City.");
        disableNetherliciousBasaltInAncientCity = conf.getBoolean("disableNetherliciousBasaltInAncientCity", "Ancient City Customization", true, "Do not use Netherlicious basalt and instead use the one from Et Futurum Requiem, if those do not exist then use Polished Vanite Bricks.");
        disableNetherliciousSmoothBasaltInAncientCity = conf.getBoolean("disableNetherliciousSmoothBasaltInAncientCity", "Ancient City Customization", true, "Do not use Netherlicious smooth basalt and instead use the one from Et Futurum Requiem, if those do not exist then use Polished Vanite Bricks.");
        disableMagmaBlock = conf.getBoolean("disableMagmaBlock", "Et Futurum Requiem Options", false, "Enables the use of Magma Block in structures: DISABLE if magma blocks are disabled in Et Futurum Requiem.");
        disableChain = conf.getBoolean("disableChain", "Et Futurum Requiem Options", false, "Enables the use of Chains in structures: DISABLE if chains are disabled in Et Futurum Requiem.");
        enableSpawnGlowSquid = conf.getBoolean("enableSpawnGlowSquid", "Mobs", true, "Enables the Spawning of Glow Squids");
        enableSpawnPhantom = conf.getBoolean("enableSpawnPhantom", "Mobs", true, "Enables the Spawning of Phantoms");
        enableSpawnOverworldPhantom = conf.getBoolean("enableSpawnOverworldPhantom", "Mobs", false, "Enables the Spawning of Phantoms in the Mountain Biomes");
        enableSpawnSlaughter = conf.getBoolean("enableSpawnSlaughter", "Mobs", true, "Enables the Spawning of Slaughters");
        enableSpawnSculkDweller = conf.getBoolean("enableSpawnSculkDweller", "Mobs", true, "Enables the Spawning of Sculk Dweller");
        enableSpawnDrifter = conf.getBoolean("enableSpawnDrifter", "Mobs", true, "Enables the Spawning of Drifters");
        enableSpawnBlazingCharger = conf.getBoolean("enableSpawnBlazingCharger", "Mobs", true, "Enables the Spawning of Blazing Chargers");
        enableSpawnEnderLord = conf.getBoolean("enableSpawnEnderLord", "Mobs", true, "Enables the Spawning of Enderlords");
        enableSpawnEnderAvis = conf.getBoolean("enableSpawnEnderAvis", "Mobs", true, "Enables the Spawning of Ender Avis");
        enableSpawnEnderRay = conf.getBoolean("enableSpawnEnderRay", "Mobs", true, "Enables the Spawning of Ender Rays");
        enableSpawnIceologer = conf.getBoolean("enableSpawnIceologer", "Mobs", true, "Enables the Spawning of Iceologer");
        enableSpawnVindicator = conf.getBoolean("enableSpawnVindicator", "Mobs", true, "Enables the Spawning of Vindicator");
        enableSpawnVoidEntity = conf.getBoolean("enableSpawnVoidEntity", "Mobs", true, "Enables the Spawning of Void Entity");
        enableSpawnVoidCube = conf.getBoolean("enableSpawnVoidCube", "Mobs", true, "Enables the Spawning of Void Cube");
        enableSpawnNullifier = conf.getBoolean("enableSpawnNullifier", "Mobs", true, "Enables the Spawning of Nullifier");
        enableSpawnGoat = conf.getBoolean("enableSpawnGoat", "Mobs", true, "Enables the Spawning of 1.17 Goat");
        enableSpawnBlazingSerpent = conf.getBoolean("enableSpawnBlazingSerpent", "Mobs", true, "Enables the Spawning of Blazing Serpent");
        enableSpawnSculkAbomination = conf.getBoolean("enableSpawnSculkAbomination", "Mobs", true, "Enables the Spawning of the Sculk Abomination");
        enableSpawnPhoenix = conf.getBoolean("enableSpawnPhoenix", "Mobs", true, "Enables the Spawning of the Phoenix");
        enableSpawnFirefly = conf.getBoolean("enableSpawnFirefly", "Mobs", true, "Enables the Spawning of the Firefly");
        enableSpawnDeepoid = conf.getBoolean("enableSpawnDeepoid", "Mobs", true, "Enables the Spawning of the Deepoid");
        enableSpawnCaveMonitor = conf.getBoolean("enableSpawnCaveMonitor", "Mobs", true, "Enables the Spawning of the Cave Monitor");
        enableSpawnDeathStalker = conf.getBoolean("enableSpawnDeathStalker", "Mobs", true, "Enables the Spawning of the Death Stalker");
        enableSpawnRealityDistorter = conf.getBoolean("enableSpawnRealityDistorter", "Mobs", true, "Enables the Spawning of the Reality Distorter");
        enableSpawnDestituteTentacle = conf.getBoolean("enableSpawnDestituteTentacle", "Mobs", true, "Enables the Spawning of the Destitute Tentacle");
        enableSpawnNitro = conf.getBoolean("enableSpawnNitro", "Mobs", true, "Enables the Spawning of the Nitro");
        enableSpawnCreepyCube = conf.getBoolean("enableSpawnCreepyCube", "Mobs", true, "Enables the Spawning of the Creepy Cube");
        enableSpawnCreaking = conf.getBoolean("enableSpawnCreaking", "Mobs", true, "Enables the Spawning of the Creaking");
        enableSpawnCreakinginModdedBiomes = conf.getBoolean("enableSpawnCreakinginModdedBiomes", "Mobs", true, "Enables the Spawning of the Creaking in Modded Biomes; will spawn all variants at random as it only works with vanilla biomes.");
        enableSpawnFrog = conf.getBoolean("enableSpawnFrog", "Mobs", true, "Enables the Spawning of Frogs");
        enableSpawnFroginModdedBiomes = conf.getBoolean("enableSpawnFroginModdedBiomes", "Mobs", true, "Enables the Spawning of the Frog in Modded Biomes; will spawn all variants at random as it only works with vanilla biomes.");
        enableSpawnGiantFrog = conf.getBoolean("enableSpawnGiantFrog", "Mobs", true, "Enables the Spawning of Giant Frogs");
        enableSpawnHardmodeZombie = conf.getBoolean("enableSpawnHardmodeZombie", "Mobs", true, "Enables the Spawning of Hardmode Zombies once HardMode is enabled.");
        enableSpawnHardmodeSkeleton = conf.getBoolean("enableSpawnHardmodeSkeleton", "Mobs", true, "Enables the Spawning of Hardmode Skeletons once HardMode is enabled.");
        enableSpawnHardmodeCreeper = conf.getBoolean("enableSpawnHardmodeCreeper", "Mobs", true, "Enables the Spawning of Hardmode Creepers once HardMode is enabled.");
        enableSpawnHardmodeSpider = conf.getBoolean("enableSpawnHardmodeSpider", "Mobs", true, "Enables the Spawning of Hardmode Spider once HardMode is enabled.");
        enableSpawnHardmodeMagmaCube = conf.getBoolean("enableSpawnHardmodeMagmaCube", "Mobs", true, "Enables the Spawning of Hardmode MagmaCubes once HardMode is enabled.");
        enableSpawnHardmodeGhast = conf.getBoolean("enableSpawnHardmodeGhast", "Mobs", true, "Enables the Spawning of Hardmode Ghasts once HardMode is enabled.");
        enableSpawnHardmodeSlime = conf.getBoolean("enableSpawnHardmodeSlime", "Mobs", true, "Enables the Spawning of Hardmode Slimes once HardMode is enabled.");
        enableIncreasedVanillaNetherMobSpawn = conf.getBoolean("enableIncreasedVanillaNetherMobSpawn", "Mobs", true, "Enables increased spawning of Zombie Pigmen, Magma Cubes, and Ghasts in all Nether Biomes");
        enableIncreasedVanillaOverworldMobSpawn = conf.getBoolean("enableIncreasedVanillaOverworldMobSpawn", "Mobs", true, "Enables increased spawning of Skeletons, Creepers, Zombies, and Witches.");
        enableSpawnFireflyOtherBiomes = conf.getBoolean("enableSpawnFireflyOtherBiomes", "Firefly", false, "Enables the Spawning of the Firefly in biomes with Plains or Forest tags.");
        enableNoDespawnFirefly = conf.getBoolean("enableNoDespawnFirefly", "Firefly", false, "Disables the despawning of Fireflies after a certian amount of time; they still despawn natually though.");
        enableAetherLegacyDepartureItems = conf.getBoolean("enableAetherLegacyDepartureItems", "Aether Legacy Options", false, "Enables crates to drop of items from my custom fork of Aether Legacy Departure.");
        enableRawDivineral = conf.getBoolean("enableRawDivineral", "Aether Legacy Options", false, "Enables the Raw Divineral Block.");
        enableNovaCraftGloves = conf.getBoolean("enableNovaCraftGloves", "Aether Legacy Options", false, "Enables the recipe for NovaCraft gloves from Aether Departure.");
        enableGlowSquidParticles = conf.getBoolean("enableGlowSquidParticles", "New particles", true, "Enables Glow Squid Particles");
        enableEnderLordParticles = conf.getBoolean("enableEnderLordParticles", "New particles", true, "Enables Ender Lord Particles");
        enableWardenParticles = conf.getBoolean("enableWardenParticles", "New particles", true, "Enables Warden Particles");
        enableVoidEntityParticles = conf.getBoolean("enableVoidEntityParticles", "New particles", true, "Enables Void Entity Particles");
        enableFireflyParticles = conf.getBoolean("enableFireflyParticles", "New particles", true, "Enables FireFly Particles");
        enableIonizatiorParticles = conf.getBoolean("enableIonizatiorParticles", "New particles", true, "Enables Ionizatior Particles");
        enableWeaponsToAllignWithVanilla = conf.getBoolean("enableWeaponsToAllignWithVanilla", "Important Options", true, "Enables weapons from novacraft to allign with vanilla in terms of damage/durability more rather than other RPG like mods.");
        enableTreasureCratesDropDiamonds = conf.getBoolean("enableTreasureCratesDropDiamonds", "Misc", true, "Enables diamonds in novacraft loot tables");
        enableCrystalGolemAura = conf.getBoolean("enableCrystalGolemAura", "Misc", true, "Enables the auras of the various crystal golems.");
        enableLuminantLeavesGlow = conf.getBoolean("enableLuminantLeavesGlow", "Misc", true, "Enables luminant leaves to have a slight glow effect.(Disable this if you use dynamic leaves)");
        enableAncientCityTotem = conf.getBoolean("enableAncientCityTotem", "Misc", true, "Enables crafting recipe for Ancient City Totem");
        enableSculkStoneSpreading = conf.getBoolean("enableSculkStoneSpreading", "Misc", false, "Enables sculk stone to spread to nearby stone type blocks like grass.");
        enableNoSkippingTheNight = conf.getBoolean("enableNoSkippingTheNight", "Important Options", true, "Beds will only set the player's spawnpoint and will not allow them to skip the night.");
        enableHardmode = conf.getBoolean("enableHardmode", "Misc", false, "Enables Hardmode");
        disableEnchantedGoldenAppleRecipe = conf.getBoolean("disableEnchantedGoldenAppleRecipe", "Important Options", true, "Disables recipe for Enchanted Golden Apples.");
        enableGlowingObsidian = conf.getBoolean("enableGlowingObsidian", "Important Options", true, "Obsidian Blocks that are directly above a lava source block convert to Glowing Obsidian.");
        enableUniqueLegendaryBeaconBeam = conf.getBoolean("enableUniqueLegendaryBeaconBeam", "Misc", false, "Enables a unique beacon beam for the legendary beacon.");
        enableWardenBlindness = conf.getBoolean("enableWardenBlindness", "Misc", true, "Enables the Warden Applying blindess to the player when within 5 Blocks: Note if False the Player will be given Slowness II Instead");
        enableWardenSlowness = conf.getBoolean("enableWardenSlowness", "Misc", true, "Enables the Warden Applying slowness II to the player when within 5 Blocks");
        enableWardenWeakness = conf.getBoolean("enableWardenWeakness", "Misc", false, "Enables the Warden Applying weakness I to the player when within 5 Blocks");
        gammaAlterations = (float)conf.get("Gamma Alterations | Range:-1 - 1", "Important Options", 0.0D).getDouble();
        enableGammaAlterations = conf.getBoolean("enableGammaAlterations", "Important Options", true, "Locks the gamma of the game to be whatever is set in gammaAlterations: -0.25 is 25% darker etc");
        enableDebugMode = conf.getBoolean("enableDebugMode", "Important Options", false, "Enables log messages for location of structures generating or if a crash was prevented.");
        if (conf.hasChanged()) {
            conf.save();
        }

    }
}

